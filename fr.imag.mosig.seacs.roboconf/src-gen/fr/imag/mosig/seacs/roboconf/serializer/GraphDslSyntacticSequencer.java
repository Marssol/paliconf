/*
 * generated by Xtext
 */
package fr.imag.mosig.seacs.roboconf.serializer;

import com.google.inject.Inject;
import fr.imag.mosig.seacs.roboconf.services.GraphDslGrammarAccess;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;

@SuppressWarnings("all")
public class GraphDslSyntacticSequencer extends AbstractSyntacticSequencer {

	protected GraphDslGrammarAccess grammarAccess;
	protected AbstractElementAlias match_ChildrenProperty_WSTerminalRuleCall_1_q;
	protected AbstractElementAlias match_ChildrenProperty_WSTerminalRuleCall_3_q;
	protected AbstractElementAlias match_ChildrenProperty_WSTerminalRuleCall_4_1_q;
	protected AbstractElementAlias match_ChildrenProperty_WSTerminalRuleCall_5_q;
	protected AbstractElementAlias match_ComponentProperties_WSTerminalRuleCall_1_q;
	protected AbstractElementAlias match_ComponentProperties_WSTerminalRuleCall_3_q;
	protected AbstractElementAlias match_Component_WSTerminalRuleCall_1_q;
	protected AbstractElementAlias match_Component_WSTerminalRuleCall_3_q;
	protected AbstractElementAlias match_Component_WSTerminalRuleCall_5_q;
	protected AbstractElementAlias match_ExportsProperty_WSTerminalRuleCall_1_q;
	protected AbstractElementAlias match_ExportsProperty_WSTerminalRuleCall_3_q;
	protected AbstractElementAlias match_ExportsProperty_WSTerminalRuleCall_4_1_q;
	protected AbstractElementAlias match_ExportsProperty_WSTerminalRuleCall_5_q;
	protected AbstractElementAlias match_ExportsVariable_WSTerminalRuleCall_1_1_q;
	protected AbstractElementAlias match_ExportsVariable_WSTerminalRuleCall_1_3_q;
	protected AbstractElementAlias match_ExtendsProperty_WSTerminalRuleCall_1_q;
	protected AbstractElementAlias match_ExtendsProperty_WSTerminalRuleCall_3_q;
	protected AbstractElementAlias match_ExtendsProperty_WSTerminalRuleCall_4_1_q;
	protected AbstractElementAlias match_ExtendsProperty_WSTerminalRuleCall_5_q;
	protected AbstractElementAlias match_FacetProperties_WSTerminalRuleCall_0_q;
	protected AbstractElementAlias match_FacetProperties_WSTerminalRuleCall_2_q;
	protected AbstractElementAlias match_Facet_WSTerminalRuleCall_1_q;
	protected AbstractElementAlias match_Facet_WSTerminalRuleCall_3_q;
	protected AbstractElementAlias match_Facet_WSTerminalRuleCall_5_q;
	protected AbstractElementAlias match_Facet_WSTerminalRuleCall_7_q;
	protected AbstractElementAlias match_FacetsProperty_WSTerminalRuleCall_1_q;
	protected AbstractElementAlias match_FacetsProperty_WSTerminalRuleCall_3_q;
	protected AbstractElementAlias match_FacetsProperty_WSTerminalRuleCall_4_1_q;
	protected AbstractElementAlias match_FacetsProperty_WSTerminalRuleCall_5_q;
	protected AbstractElementAlias match_Graph_WSTerminalRuleCall_0_q;
	protected AbstractElementAlias match_Graph_WSTerminalRuleCall_2_q;
	protected AbstractElementAlias match_ImportsProperty_WSTerminalRuleCall_1_q;
	protected AbstractElementAlias match_ImportsProperty_WSTerminalRuleCall_3_q;
	protected AbstractElementAlias match_ImportsProperty_WSTerminalRuleCall_4_1_q;
	protected AbstractElementAlias match_ImportsProperty_WSTerminalRuleCall_5_q;
	protected AbstractElementAlias match_InstallerProperty_WSTerminalRuleCall_1_q;
	protected AbstractElementAlias match_InstallerProperty_WSTerminalRuleCall_3_q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (GraphDslGrammarAccess) access;
		match_ChildrenProperty_WSTerminalRuleCall_1_q = new TokenAlias(false, true, grammarAccess.getChildrenPropertyAccess().getWSTerminalRuleCall_1());
		match_ChildrenProperty_WSTerminalRuleCall_3_q = new TokenAlias(false, true, grammarAccess.getChildrenPropertyAccess().getWSTerminalRuleCall_3());
		match_ChildrenProperty_WSTerminalRuleCall_4_1_q = new TokenAlias(false, true, grammarAccess.getChildrenPropertyAccess().getWSTerminalRuleCall_4_1());
		match_ChildrenProperty_WSTerminalRuleCall_5_q = new TokenAlias(false, true, grammarAccess.getChildrenPropertyAccess().getWSTerminalRuleCall_5());
		match_ComponentProperties_WSTerminalRuleCall_1_q = new TokenAlias(false, true, grammarAccess.getComponentPropertiesAccess().getWSTerminalRuleCall_1());
		match_ComponentProperties_WSTerminalRuleCall_3_q = new TokenAlias(false, true, grammarAccess.getComponentPropertiesAccess().getWSTerminalRuleCall_3());
		match_Component_WSTerminalRuleCall_1_q = new TokenAlias(false, true, grammarAccess.getComponentAccess().getWSTerminalRuleCall_1());
		match_Component_WSTerminalRuleCall_3_q = new TokenAlias(false, true, grammarAccess.getComponentAccess().getWSTerminalRuleCall_3());
		match_Component_WSTerminalRuleCall_5_q = new TokenAlias(false, true, grammarAccess.getComponentAccess().getWSTerminalRuleCall_5());
		match_ExportsProperty_WSTerminalRuleCall_1_q = new TokenAlias(false, true, grammarAccess.getExportsPropertyAccess().getWSTerminalRuleCall_1());
		match_ExportsProperty_WSTerminalRuleCall_3_q = new TokenAlias(false, true, grammarAccess.getExportsPropertyAccess().getWSTerminalRuleCall_3());
		match_ExportsProperty_WSTerminalRuleCall_4_1_q = new TokenAlias(false, true, grammarAccess.getExportsPropertyAccess().getWSTerminalRuleCall_4_1());
		match_ExportsProperty_WSTerminalRuleCall_5_q = new TokenAlias(false, true, grammarAccess.getExportsPropertyAccess().getWSTerminalRuleCall_5());
		match_ExportsVariable_WSTerminalRuleCall_1_1_q = new TokenAlias(false, true, grammarAccess.getExportsVariableAccess().getWSTerminalRuleCall_1_1());
		match_ExportsVariable_WSTerminalRuleCall_1_3_q = new TokenAlias(false, true, grammarAccess.getExportsVariableAccess().getWSTerminalRuleCall_1_3());
		match_ExtendsProperty_WSTerminalRuleCall_1_q = new TokenAlias(false, true, grammarAccess.getExtendsPropertyAccess().getWSTerminalRuleCall_1());
		match_ExtendsProperty_WSTerminalRuleCall_3_q = new TokenAlias(false, true, grammarAccess.getExtendsPropertyAccess().getWSTerminalRuleCall_3());
		match_ExtendsProperty_WSTerminalRuleCall_4_1_q = new TokenAlias(false, true, grammarAccess.getExtendsPropertyAccess().getWSTerminalRuleCall_4_1());
		match_ExtendsProperty_WSTerminalRuleCall_5_q = new TokenAlias(false, true, grammarAccess.getExtendsPropertyAccess().getWSTerminalRuleCall_5());
		match_FacetProperties_WSTerminalRuleCall_0_q = new TokenAlias(false, true, grammarAccess.getFacetPropertiesAccess().getWSTerminalRuleCall_0());
		match_FacetProperties_WSTerminalRuleCall_2_q = new TokenAlias(false, true, grammarAccess.getFacetPropertiesAccess().getWSTerminalRuleCall_2());
		match_Facet_WSTerminalRuleCall_1_q = new TokenAlias(false, true, grammarAccess.getFacetAccess().getWSTerminalRuleCall_1());
		match_Facet_WSTerminalRuleCall_3_q = new TokenAlias(false, true, grammarAccess.getFacetAccess().getWSTerminalRuleCall_3());
		match_Facet_WSTerminalRuleCall_5_q = new TokenAlias(false, true, grammarAccess.getFacetAccess().getWSTerminalRuleCall_5());
		match_Facet_WSTerminalRuleCall_7_q = new TokenAlias(false, true, grammarAccess.getFacetAccess().getWSTerminalRuleCall_7());
		match_FacetsProperty_WSTerminalRuleCall_1_q = new TokenAlias(false, true, grammarAccess.getFacetsPropertyAccess().getWSTerminalRuleCall_1());
		match_FacetsProperty_WSTerminalRuleCall_3_q = new TokenAlias(false, true, grammarAccess.getFacetsPropertyAccess().getWSTerminalRuleCall_3());
		match_FacetsProperty_WSTerminalRuleCall_4_1_q = new TokenAlias(false, true, grammarAccess.getFacetsPropertyAccess().getWSTerminalRuleCall_4_1());
		match_FacetsProperty_WSTerminalRuleCall_5_q = new TokenAlias(false, true, grammarAccess.getFacetsPropertyAccess().getWSTerminalRuleCall_5());
		match_Graph_WSTerminalRuleCall_0_q = new TokenAlias(false, true, grammarAccess.getGraphAccess().getWSTerminalRuleCall_0());
		match_Graph_WSTerminalRuleCall_2_q = new TokenAlias(false, true, grammarAccess.getGraphAccess().getWSTerminalRuleCall_2());
		match_ImportsProperty_WSTerminalRuleCall_1_q = new TokenAlias(false, true, grammarAccess.getImportsPropertyAccess().getWSTerminalRuleCall_1());
		match_ImportsProperty_WSTerminalRuleCall_3_q = new TokenAlias(false, true, grammarAccess.getImportsPropertyAccess().getWSTerminalRuleCall_3());
		match_ImportsProperty_WSTerminalRuleCall_4_1_q = new TokenAlias(false, true, grammarAccess.getImportsPropertyAccess().getWSTerminalRuleCall_4_1());
		match_ImportsProperty_WSTerminalRuleCall_5_q = new TokenAlias(false, true, grammarAccess.getImportsPropertyAccess().getWSTerminalRuleCall_5());
		match_InstallerProperty_WSTerminalRuleCall_1_q = new TokenAlias(false, true, grammarAccess.getInstallerPropertyAccess().getWSTerminalRuleCall_1());
		match_InstallerProperty_WSTerminalRuleCall_3_q = new TokenAlias(false, true, grammarAccess.getInstallerPropertyAccess().getWSTerminalRuleCall_3());
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if(ruleCall.getRule() == grammarAccess.getWSRule())
			return getWSToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * terminal WS			: (' '|'\t'|'\r'|'\n')+;
	 */
	protected String getWSToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return " ";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if(match_ChildrenProperty_WSTerminalRuleCall_1_q.equals(syntax))
				emit_ChildrenProperty_WSTerminalRuleCall_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_ChildrenProperty_WSTerminalRuleCall_3_q.equals(syntax))
				emit_ChildrenProperty_WSTerminalRuleCall_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_ChildrenProperty_WSTerminalRuleCall_4_1_q.equals(syntax))
				emit_ChildrenProperty_WSTerminalRuleCall_4_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_ChildrenProperty_WSTerminalRuleCall_5_q.equals(syntax))
				emit_ChildrenProperty_WSTerminalRuleCall_5_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_ComponentProperties_WSTerminalRuleCall_1_q.equals(syntax))
				emit_ComponentProperties_WSTerminalRuleCall_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_ComponentProperties_WSTerminalRuleCall_3_q.equals(syntax))
				emit_ComponentProperties_WSTerminalRuleCall_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_Component_WSTerminalRuleCall_1_q.equals(syntax))
				emit_Component_WSTerminalRuleCall_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_Component_WSTerminalRuleCall_3_q.equals(syntax))
				emit_Component_WSTerminalRuleCall_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_Component_WSTerminalRuleCall_5_q.equals(syntax))
				emit_Component_WSTerminalRuleCall_5_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_ExportsProperty_WSTerminalRuleCall_1_q.equals(syntax))
				emit_ExportsProperty_WSTerminalRuleCall_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_ExportsProperty_WSTerminalRuleCall_3_q.equals(syntax))
				emit_ExportsProperty_WSTerminalRuleCall_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_ExportsProperty_WSTerminalRuleCall_4_1_q.equals(syntax))
				emit_ExportsProperty_WSTerminalRuleCall_4_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_ExportsProperty_WSTerminalRuleCall_5_q.equals(syntax))
				emit_ExportsProperty_WSTerminalRuleCall_5_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_ExportsVariable_WSTerminalRuleCall_1_1_q.equals(syntax))
				emit_ExportsVariable_WSTerminalRuleCall_1_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_ExportsVariable_WSTerminalRuleCall_1_3_q.equals(syntax))
				emit_ExportsVariable_WSTerminalRuleCall_1_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_ExtendsProperty_WSTerminalRuleCall_1_q.equals(syntax))
				emit_ExtendsProperty_WSTerminalRuleCall_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_ExtendsProperty_WSTerminalRuleCall_3_q.equals(syntax))
				emit_ExtendsProperty_WSTerminalRuleCall_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_ExtendsProperty_WSTerminalRuleCall_4_1_q.equals(syntax))
				emit_ExtendsProperty_WSTerminalRuleCall_4_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_ExtendsProperty_WSTerminalRuleCall_5_q.equals(syntax))
				emit_ExtendsProperty_WSTerminalRuleCall_5_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_FacetProperties_WSTerminalRuleCall_0_q.equals(syntax))
				emit_FacetProperties_WSTerminalRuleCall_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_FacetProperties_WSTerminalRuleCall_2_q.equals(syntax))
				emit_FacetProperties_WSTerminalRuleCall_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_Facet_WSTerminalRuleCall_1_q.equals(syntax))
				emit_Facet_WSTerminalRuleCall_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_Facet_WSTerminalRuleCall_3_q.equals(syntax))
				emit_Facet_WSTerminalRuleCall_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_Facet_WSTerminalRuleCall_5_q.equals(syntax))
				emit_Facet_WSTerminalRuleCall_5_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_Facet_WSTerminalRuleCall_7_q.equals(syntax))
				emit_Facet_WSTerminalRuleCall_7_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_FacetsProperty_WSTerminalRuleCall_1_q.equals(syntax))
				emit_FacetsProperty_WSTerminalRuleCall_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_FacetsProperty_WSTerminalRuleCall_3_q.equals(syntax))
				emit_FacetsProperty_WSTerminalRuleCall_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_FacetsProperty_WSTerminalRuleCall_4_1_q.equals(syntax))
				emit_FacetsProperty_WSTerminalRuleCall_4_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_FacetsProperty_WSTerminalRuleCall_5_q.equals(syntax))
				emit_FacetsProperty_WSTerminalRuleCall_5_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_Graph_WSTerminalRuleCall_0_q.equals(syntax))
				emit_Graph_WSTerminalRuleCall_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_Graph_WSTerminalRuleCall_2_q.equals(syntax))
				emit_Graph_WSTerminalRuleCall_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_ImportsProperty_WSTerminalRuleCall_1_q.equals(syntax))
				emit_ImportsProperty_WSTerminalRuleCall_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_ImportsProperty_WSTerminalRuleCall_3_q.equals(syntax))
				emit_ImportsProperty_WSTerminalRuleCall_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_ImportsProperty_WSTerminalRuleCall_4_1_q.equals(syntax))
				emit_ImportsProperty_WSTerminalRuleCall_4_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_ImportsProperty_WSTerminalRuleCall_5_q.equals(syntax))
				emit_ImportsProperty_WSTerminalRuleCall_5_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_InstallerProperty_WSTerminalRuleCall_1_q.equals(syntax))
				emit_InstallerProperty_WSTerminalRuleCall_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if(match_InstallerProperty_WSTerminalRuleCall_3_q.equals(syntax))
				emit_InstallerProperty_WSTerminalRuleCall_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'children:' (ambiguity) name+=ID
	 */
	protected void emit_ChildrenProperty_WSTerminalRuleCall_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     name+=ID (ambiguity) ',' WS? name+=ID
	 *     name+=ID (ambiguity) WS? ';' (rule end)
	 */
	protected void emit_ChildrenProperty_WSTerminalRuleCall_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     name+=ID ',' (ambiguity) name+=ID
	 *     name+=ID WS? ',' (ambiguity) name+=ID
	 */
	protected void emit_ChildrenProperty_WSTerminalRuleCall_4_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     name+=ID (ambiguity) ';' (rule end)
	 *     name+=ID WS? (ambiguity) ';' (rule end)
	 */
	protected void emit_ChildrenProperty_WSTerminalRuleCall_5_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) installerProperty=InstallerProperty
	 *     optionalProperties+=OptionalProperty (ambiguity) installerProperty=InstallerProperty
	 */
	protected void emit_ComponentProperties_WSTerminalRuleCall_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     installerProperty=InstallerProperty (ambiguity) (rule end)
	 *     installerProperty=InstallerProperty (ambiguity) optionalProperties+=OptionalProperty
	 */
	protected void emit_ComponentProperties_WSTerminalRuleCall_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) '{' WS? properties=ComponentProperties
	 */
	protected void emit_Component_WSTerminalRuleCall_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID WS? '{' (ambiguity) properties=ComponentProperties
	 */
	protected void emit_Component_WSTerminalRuleCall_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     properties=ComponentProperties (ambiguity) '}' (rule end)
	 */
	protected void emit_Component_WSTerminalRuleCall_5_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'exports:' (ambiguity) exportsVariables+=ExportsVariable
	 */
	protected void emit_ExportsProperty_WSTerminalRuleCall_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     exportsVariables+=ExportsVariable (ambiguity) ',' WS? exportsVariables+=ExportsVariable
	 *     exportsVariables+=ExportsVariable (ambiguity) WS? ';' (rule end)
	 */
	protected void emit_ExportsProperty_WSTerminalRuleCall_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     exportsVariables+=ExportsVariable ',' (ambiguity) exportsVariables+=ExportsVariable
	 *     exportsVariables+=ExportsVariable WS? ',' (ambiguity) exportsVariables+=ExportsVariable
	 */
	protected void emit_ExportsProperty_WSTerminalRuleCall_4_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     exportsVariables+=ExportsVariable (ambiguity) ';' (rule end)
	 *     exportsVariables+=ExportsVariable WS? (ambiguity) ';' (rule end)
	 */
	protected void emit_ExportsProperty_WSTerminalRuleCall_5_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) '=' WS? value=INT
	 */
	protected void emit_ExportsVariable_WSTerminalRuleCall_1_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID WS? '=' (ambiguity) value=INT
	 */
	protected void emit_ExportsVariable_WSTerminalRuleCall_1_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'extends:' (ambiguity) extendsNames+=ID
	 */
	protected void emit_ExtendsProperty_WSTerminalRuleCall_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     extendsNames+=ID (ambiguity) ',' WS? extendsNames+=ID
	 *     extendsNames+=ID (ambiguity) WS? ';' (rule end)
	 */
	protected void emit_ExtendsProperty_WSTerminalRuleCall_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     extendsNames+=ID ',' (ambiguity) extendsNames+=ID
	 *     extendsNames+=ID WS? ',' (ambiguity) extendsNames+=ID
	 */
	protected void emit_ExtendsProperty_WSTerminalRuleCall_4_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     extendsNames+=ID (ambiguity) ';' (rule end)
	 *     extendsNames+=ID WS? (ambiguity) ';' (rule end)
	 */
	protected void emit_ExtendsProperty_WSTerminalRuleCall_5_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) properties+=FacetProperty
	 *     properties+=FacetProperty WS? (ambiguity) properties+=FacetProperty
	 */
	protected void emit_FacetProperties_WSTerminalRuleCall_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     properties+=FacetProperty (ambiguity) (rule end)
	 *     properties+=FacetProperty (ambiguity) WS? properties+=FacetProperty
	 */
	protected void emit_FacetProperties_WSTerminalRuleCall_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'facet' (ambiguity) name=ID
	 */
	protected void emit_Facet_WSTerminalRuleCall_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) '{' WS? properties=FacetProperties
	 */
	protected void emit_Facet_WSTerminalRuleCall_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID WS? '{' (ambiguity) properties=FacetProperties
	 */
	protected void emit_Facet_WSTerminalRuleCall_5_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     properties=FacetProperties (ambiguity) '}' (rule end)
	 */
	protected void emit_Facet_WSTerminalRuleCall_7_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'facets:' (ambiguity) facetsNames+=ID
	 */
	protected void emit_FacetsProperty_WSTerminalRuleCall_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     facetsNames+=ID (ambiguity) ',' WS? facetsNames+=ID
	 *     facetsNames+=ID (ambiguity) WS? ';' (rule end)
	 */
	protected void emit_FacetsProperty_WSTerminalRuleCall_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     facetsNames+=ID ',' (ambiguity) facetsNames+=ID
	 *     facetsNames+=ID WS? ',' (ambiguity) facetsNames+=ID
	 */
	protected void emit_FacetsProperty_WSTerminalRuleCall_4_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     facetsNames+=ID (ambiguity) ';' (rule end)
	 *     facetsNames+=ID WS? (ambiguity) ';' (rule end)
	 */
	protected void emit_FacetsProperty_WSTerminalRuleCall_5_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) components+=ComponentOrFacet
	 *     components+=ComponentOrFacet WS? (ambiguity) components+=ComponentOrFacet
	 */
	protected void emit_Graph_WSTerminalRuleCall_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     components+=ComponentOrFacet (ambiguity) (rule end)
	 *     components+=ComponentOrFacet (ambiguity) WS? components+=ComponentOrFacet
	 */
	protected void emit_Graph_WSTerminalRuleCall_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'imports:' (ambiguity) importsVariables+=ImportsVariable
	 */
	protected void emit_ImportsProperty_WSTerminalRuleCall_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     importsVariables+=ImportsVariable (ambiguity) ',' WS? importsVariables+=ImportsVariable
	 *     importsVariables+=ImportsVariable (ambiguity) WS? ';' (rule end)
	 */
	protected void emit_ImportsProperty_WSTerminalRuleCall_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     importsVariables+=ImportsVariable ',' (ambiguity) importsVariables+=ImportsVariable
	 *     importsVariables+=ImportsVariable WS? ',' (ambiguity) importsVariables+=ImportsVariable
	 */
	protected void emit_ImportsProperty_WSTerminalRuleCall_4_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     importsVariables+=ImportsVariable (ambiguity) ';' (rule end)
	 *     importsVariables+=ImportsVariable WS? (ambiguity) ';' (rule end)
	 */
	protected void emit_ImportsProperty_WSTerminalRuleCall_5_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'installer:' (ambiguity) name=ID
	 */
	protected void emit_InstallerProperty_WSTerminalRuleCall_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     WS?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) ';' (rule end)
	 */
	protected void emit_InstallerProperty_WSTerminalRuleCall_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
