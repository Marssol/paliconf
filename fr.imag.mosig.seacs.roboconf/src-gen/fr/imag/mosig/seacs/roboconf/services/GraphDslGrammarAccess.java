/*
 * generated by Xtext
 */
package fr.imag.mosig.seacs.roboconf.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class GraphDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class GraphElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Graph");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cComponentsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cComponentsComponentOrFacetParserRuleCall_1_0 = (RuleCall)cComponentsAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//Graph:
		//	(WS? components+=ComponentOrFacet WS?)*;
		@Override public ParserRule getRule() { return rule; }

		//(WS? components+=ComponentOrFacet WS?)*
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//components+=ComponentOrFacet
		public Assignment getComponentsAssignment_1() { return cComponentsAssignment_1; }

		//ComponentOrFacet
		public RuleCall getComponentsComponentOrFacetParserRuleCall_1_0() { return cComponentsComponentOrFacetParserRuleCall_1_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }
	}

	public class ComponentOrFacetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ComponentOrFacet");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cComponentAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cComponentComponentParserRuleCall_0_0 = (RuleCall)cComponentAssignment_0.eContents().get(0);
		private final Assignment cFacetAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cFacetFacetParserRuleCall_1_0 = (RuleCall)cFacetAssignment_1.eContents().get(0);
		
		//ComponentOrFacet:
		//	component=Component | facet=Facet;
		@Override public ParserRule getRule() { return rule; }

		//component=Component | facet=Facet
		public Alternatives getAlternatives() { return cAlternatives; }

		//component=Component
		public Assignment getComponentAssignment_0() { return cComponentAssignment_0; }

		//Component
		public RuleCall getComponentComponentParserRuleCall_0_0() { return cComponentComponentParserRuleCall_0_0; }

		//facet=Facet
		public Assignment getFacetAssignment_1() { return cFacetAssignment_1; }

		//Facet
		public RuleCall getFacetFacetParserRuleCall_1_0() { return cFacetFacetParserRuleCall_1_0; }
	}

	public class ComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Component");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cPropertiesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPropertiesComponentPropertiesParserRuleCall_4_0 = (RuleCall)cPropertiesAssignment_4.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Component:
		//	name=ID WS? "{" WS? properties=ComponentProperties WS? "}";
		@Override public ParserRule getRule() { return rule; }

		//name=ID WS? "{" WS? properties=ComponentProperties WS? "}"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//WS?
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//properties=ComponentProperties
		public Assignment getPropertiesAssignment_4() { return cPropertiesAssignment_4; }

		//ComponentProperties
		public RuleCall getPropertiesComponentPropertiesParserRuleCall_4_0() { return cPropertiesComponentPropertiesParserRuleCall_4_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_5() { return cWSTerminalRuleCall_5; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class FacetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Facet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFacetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final RuleCall cWSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Assignment cPropertiesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPropertiesFacetPropertiesParserRuleCall_6_0 = (RuleCall)cPropertiesAssignment_6.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Facet:
		//	"facet" WS? name=ID WS? "{" WS? properties=FacetProperties WS? "}";
		@Override public ParserRule getRule() { return rule; }

		//"facet" WS? name=ID WS? "{" WS? properties=FacetProperties WS? "}"
		public Group getGroup() { return cGroup; }

		//"facet"
		public Keyword getFacetKeyword_0() { return cFacetKeyword_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//WS?
		public RuleCall getWSTerminalRuleCall_5() { return cWSTerminalRuleCall_5; }

		//properties=FacetProperties
		public Assignment getPropertiesAssignment_6() { return cPropertiesAssignment_6; }

		//FacetProperties
		public RuleCall getPropertiesFacetPropertiesParserRuleCall_6_0() { return cPropertiesFacetPropertiesParserRuleCall_6_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_7() { return cWSTerminalRuleCall_7; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class ComponentPropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ComponentProperties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOptionalPropertiesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOptionalPropertiesOptionalPropertyParserRuleCall_0_0 = (RuleCall)cOptionalPropertiesAssignment_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cInstallerPropertyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cInstallerPropertyInstallerPropertyParserRuleCall_2_0 = (RuleCall)cInstallerPropertyAssignment_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cOptionalPropertiesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOptionalPropertiesOptionalPropertyParserRuleCall_4_0 = (RuleCall)cOptionalPropertiesAssignment_4.eContents().get(0);
		
		//ComponentProperties:
		//	optionalProperties+=OptionalProperty* WS? installerProperty=InstallerProperty WS?
		//	optionalProperties+=OptionalProperty*;
		@Override public ParserRule getRule() { return rule; }

		//optionalProperties+=OptionalProperty* WS? installerProperty=InstallerProperty WS? optionalProperties+=OptionalProperty*
		public Group getGroup() { return cGroup; }

		//optionalProperties+=OptionalProperty*
		public Assignment getOptionalPropertiesAssignment_0() { return cOptionalPropertiesAssignment_0; }

		//OptionalProperty
		public RuleCall getOptionalPropertiesOptionalPropertyParserRuleCall_0_0() { return cOptionalPropertiesOptionalPropertyParserRuleCall_0_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//installerProperty=InstallerProperty
		public Assignment getInstallerPropertyAssignment_2() { return cInstallerPropertyAssignment_2; }

		//InstallerProperty
		public RuleCall getInstallerPropertyInstallerPropertyParserRuleCall_2_0() { return cInstallerPropertyInstallerPropertyParserRuleCall_2_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//optionalProperties+=OptionalProperty*
		public Assignment getOptionalPropertiesAssignment_4() { return cOptionalPropertiesAssignment_4; }

		//OptionalProperty
		public RuleCall getOptionalPropertiesOptionalPropertyParserRuleCall_4_0() { return cOptionalPropertiesOptionalPropertyParserRuleCall_4_0; }
	}

	public class FacetPropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FacetProperties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cPropertiesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPropertiesFacetPropertyParserRuleCall_1_0 = (RuleCall)cPropertiesAssignment_1.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//FacetProperties:
		//	(WS? properties+=FacetProperty WS?)*;
		@Override public ParserRule getRule() { return rule; }

		//(WS? properties+=FacetProperty WS?)*
		public Group getGroup() { return cGroup; }

		//WS?
		public RuleCall getWSTerminalRuleCall_0() { return cWSTerminalRuleCall_0; }

		//properties+=FacetProperty
		public Assignment getPropertiesAssignment_1() { return cPropertiesAssignment_1; }

		//FacetProperty
		public RuleCall getPropertiesFacetPropertyParserRuleCall_1_0() { return cPropertiesFacetPropertyParserRuleCall_1_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }
	}

	public class FacetPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FacetProperty");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cChildrenPropertyAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cChildrenPropertyChildrenPropertyParserRuleCall_0_0 = (RuleCall)cChildrenPropertyAssignment_0.eContents().get(0);
		private final Assignment cExportsPropertyAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cExportsPropertyExportsPropertyParserRuleCall_1_0 = (RuleCall)cExportsPropertyAssignment_1.eContents().get(0);
		
		//FacetProperty:
		//	childrenProperty=ChildrenProperty | exportsProperty=ExportsProperty;
		@Override public ParserRule getRule() { return rule; }

		//childrenProperty=ChildrenProperty | exportsProperty=ExportsProperty
		public Alternatives getAlternatives() { return cAlternatives; }

		//childrenProperty=ChildrenProperty
		public Assignment getChildrenPropertyAssignment_0() { return cChildrenPropertyAssignment_0; }

		//ChildrenProperty
		public RuleCall getChildrenPropertyChildrenPropertyParserRuleCall_0_0() { return cChildrenPropertyChildrenPropertyParserRuleCall_0_0; }

		//exportsProperty=ExportsProperty
		public Assignment getExportsPropertyAssignment_1() { return cExportsPropertyAssignment_1; }

		//ExportsProperty
		public RuleCall getExportsPropertyExportsPropertyParserRuleCall_1_0() { return cExportsPropertyExportsPropertyParserRuleCall_1_0; }
	}

	public class OptionalPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OptionalProperty");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cChildrenPropertyAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cChildrenPropertyChildrenPropertyParserRuleCall_0_0 = (RuleCall)cChildrenPropertyAssignment_0.eContents().get(0);
		private final Assignment cExportsPropertyAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cExportsPropertyExportsPropertyParserRuleCall_1_0 = (RuleCall)cExportsPropertyAssignment_1.eContents().get(0);
		private final Assignment cImportsPropertyAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cImportsPropertyImportsPropertyParserRuleCall_2_0 = (RuleCall)cImportsPropertyAssignment_2.eContents().get(0);
		private final Assignment cFacetsPropertyAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cFacetsPropertyFacetsPropertyParserRuleCall_3_0 = (RuleCall)cFacetsPropertyAssignment_3.eContents().get(0);
		private final Assignment cExtendsPropertyAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cExtendsPropertyExtendsPropertyParserRuleCall_4_0 = (RuleCall)cExtendsPropertyAssignment_4.eContents().get(0);
		
		//OptionalProperty:
		//	childrenProperty=ChildrenProperty | exportsProperty=ExportsProperty | importsProperty=ImportsProperty |
		//	facetsProperty=FacetsProperty | extendsProperty=ExtendsProperty;
		@Override public ParserRule getRule() { return rule; }

		//childrenProperty=ChildrenProperty | exportsProperty=ExportsProperty | importsProperty=ImportsProperty |
		//facetsProperty=FacetsProperty | extendsProperty=ExtendsProperty
		public Alternatives getAlternatives() { return cAlternatives; }

		//childrenProperty=ChildrenProperty
		public Assignment getChildrenPropertyAssignment_0() { return cChildrenPropertyAssignment_0; }

		//ChildrenProperty
		public RuleCall getChildrenPropertyChildrenPropertyParserRuleCall_0_0() { return cChildrenPropertyChildrenPropertyParserRuleCall_0_0; }

		//exportsProperty=ExportsProperty
		public Assignment getExportsPropertyAssignment_1() { return cExportsPropertyAssignment_1; }

		//ExportsProperty
		public RuleCall getExportsPropertyExportsPropertyParserRuleCall_1_0() { return cExportsPropertyExportsPropertyParserRuleCall_1_0; }

		//importsProperty=ImportsProperty
		public Assignment getImportsPropertyAssignment_2() { return cImportsPropertyAssignment_2; }

		//ImportsProperty
		public RuleCall getImportsPropertyImportsPropertyParserRuleCall_2_0() { return cImportsPropertyImportsPropertyParserRuleCall_2_0; }

		//facetsProperty=FacetsProperty
		public Assignment getFacetsPropertyAssignment_3() { return cFacetsPropertyAssignment_3; }

		//FacetsProperty
		public RuleCall getFacetsPropertyFacetsPropertyParserRuleCall_3_0() { return cFacetsPropertyFacetsPropertyParserRuleCall_3_0; }

		//extendsProperty=ExtendsProperty
		public Assignment getExtendsPropertyAssignment_4() { return cExtendsPropertyAssignment_4; }

		//ExtendsProperty
		public RuleCall getExtendsPropertyExtendsPropertyParserRuleCall_4_0() { return cExtendsPropertyExtendsPropertyParserRuleCall_4_0; }
	}

	public class InstallerPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InstallerProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInstallerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//InstallerProperty:
		//	"installer:" WS? name=ID WS? ";";
		@Override public ParserRule getRule() { return rule; }

		//"installer:" WS? name=ID WS? ";"
		public Group getGroup() { return cGroup; }

		//"installer:"
		public Keyword getInstallerKeyword_0() { return cInstallerKeyword_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class ChildrenPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ChildrenProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChildrenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Assignment cNameAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_4_2_0 = (RuleCall)cNameAssignment_4_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ChildrenProperty:
		//	"children:" WS? name+=ID WS? ("," WS? name+=ID)* WS? ";";
		@Override public ParserRule getRule() { return rule; }

		//"children:" WS? name+=ID WS? ("," WS? name+=ID)* WS? ";"
		public Group getGroup() { return cGroup; }

		//"children:"
		public Keyword getChildrenKeyword_0() { return cChildrenKeyword_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//name+=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//("," WS? name+=ID)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4_1() { return cWSTerminalRuleCall_4_1; }

		//name+=ID
		public Assignment getNameAssignment_4_2() { return cNameAssignment_4_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_4_2_0() { return cNameIDTerminalRuleCall_4_2_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_5() { return cWSTerminalRuleCall_5; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class ExportsPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExportsProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExportsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cExportsVariablesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExportsVariablesExportsVariableParserRuleCall_2_0 = (RuleCall)cExportsVariablesAssignment_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Assignment cExportsVariablesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cExportsVariablesExportsVariableParserRuleCall_4_2_0 = (RuleCall)cExportsVariablesAssignment_4_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ExportsProperty:
		//	"exports:" WS? exportsVariables+=ExportsVariable WS? ("," WS? exportsVariables+=ExportsVariable)* WS? ";";
		@Override public ParserRule getRule() { return rule; }

		//"exports:" WS? exportsVariables+=ExportsVariable WS? ("," WS? exportsVariables+=ExportsVariable)* WS? ";"
		public Group getGroup() { return cGroup; }

		//"exports:"
		public Keyword getExportsKeyword_0() { return cExportsKeyword_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//exportsVariables+=ExportsVariable
		public Assignment getExportsVariablesAssignment_2() { return cExportsVariablesAssignment_2; }

		//ExportsVariable
		public RuleCall getExportsVariablesExportsVariableParserRuleCall_2_0() { return cExportsVariablesExportsVariableParserRuleCall_2_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//("," WS? exportsVariables+=ExportsVariable)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4_1() { return cWSTerminalRuleCall_4_1; }

		//exportsVariables+=ExportsVariable
		public Assignment getExportsVariablesAssignment_4_2() { return cExportsVariablesAssignment_4_2; }

		//ExportsVariable
		public RuleCall getExportsVariablesExportsVariableParserRuleCall_4_2_0() { return cExportsVariablesExportsVariableParserRuleCall_4_2_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_5() { return cWSTerminalRuleCall_5; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class ExportsVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExportsVariable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cNameIpKeyword_0_0 = (Keyword)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_1_0_0 = (RuleCall)cNameAssignment_1_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final RuleCall cWSTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		private final Assignment cValueAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cValueINTTerminalRuleCall_1_4_0 = (RuleCall)cValueAssignment_1_4.eContents().get(0);
		
		//ExportsVariable:
		//	name="ip" | name=ID WS? "=" WS? value=INT;
		@Override public ParserRule getRule() { return rule; }

		//name="ip" | name=ID WS? "=" WS? value=INT
		public Alternatives getAlternatives() { return cAlternatives; }

		//name="ip"
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//"ip"
		public Keyword getNameIpKeyword_0_0() { return cNameIpKeyword_0_0; }

		//name=ID WS? "=" WS? value=INT
		public Group getGroup_1() { return cGroup_1; }

		//name=ID
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0_0() { return cNameIDTerminalRuleCall_1_0_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_1_1() { return cWSTerminalRuleCall_1_1; }

		//"="
		public Keyword getEqualsSignKeyword_1_2() { return cEqualsSignKeyword_1_2; }

		//WS?
		public RuleCall getWSTerminalRuleCall_1_3() { return cWSTerminalRuleCall_1_3; }

		//value=INT
		public Assignment getValueAssignment_1_4() { return cValueAssignment_1_4; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_4_0() { return cValueINTTerminalRuleCall_1_4_0; }
	}

	public class ImportsPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImportsProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cImportsVariablesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cImportsVariablesImportsVariableParserRuleCall_2_0 = (RuleCall)cImportsVariablesAssignment_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Assignment cImportsVariablesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cImportsVariablesImportsVariableParserRuleCall_4_2_0 = (RuleCall)cImportsVariablesAssignment_4_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ImportsProperty:
		//	"imports:" WS? importsVariables+=ImportsVariable WS? ("," WS? importsVariables+=ImportsVariable)* WS? ";";
		@Override public ParserRule getRule() { return rule; }

		//"imports:" WS? importsVariables+=ImportsVariable WS? ("," WS? importsVariables+=ImportsVariable)* WS? ";"
		public Group getGroup() { return cGroup; }

		//"imports:"
		public Keyword getImportsKeyword_0() { return cImportsKeyword_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//importsVariables+=ImportsVariable
		public Assignment getImportsVariablesAssignment_2() { return cImportsVariablesAssignment_2; }

		//ImportsVariable
		public RuleCall getImportsVariablesImportsVariableParserRuleCall_2_0() { return cImportsVariablesImportsVariableParserRuleCall_2_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//("," WS? importsVariables+=ImportsVariable)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4_1() { return cWSTerminalRuleCall_4_1; }

		//importsVariables+=ImportsVariable
		public Assignment getImportsVariablesAssignment_4_2() { return cImportsVariablesAssignment_4_2; }

		//ImportsVariable
		public RuleCall getImportsVariablesImportsVariableParserRuleCall_4_2_0() { return cImportsVariablesImportsVariableParserRuleCall_4_2_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_5() { return cWSTerminalRuleCall_5; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class ImportsVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImportsVariable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cIsExternalAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cIsExternalExternalKeyword_0_0_0 = (Keyword)cIsExternalAssignment_0_0.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Assignment cComponentNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cComponentNameIDTerminalRuleCall_1_0 = (RuleCall)cComponentNameAssignment_1.eContents().get(0);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cComponentPropertyAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cComponentPropertyIDTerminalRuleCall_3_0 = (RuleCall)cComponentPropertyAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final RuleCall cWSTerminalRuleCall_4_0 = (RuleCall)cGroup_4.eContents().get(0);
		private final Assignment cIsOptionalAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final Keyword cIsOptionalOptionalKeyword_4_1_0 = (Keyword)cIsOptionalAssignment_4_1.eContents().get(0);
		
		//ImportsVariable:
		//	(isExternal?="external" WS)? componentName=ID "." componentProperty=ID (WS isOptional?="(optional)")?;
		@Override public ParserRule getRule() { return rule; }

		//(isExternal?="external" WS)? componentName=ID "." componentProperty=ID (WS isOptional?="(optional)")?
		public Group getGroup() { return cGroup; }

		//(isExternal?="external" WS)?
		public Group getGroup_0() { return cGroup_0; }

		//isExternal?="external"
		public Assignment getIsExternalAssignment_0_0() { return cIsExternalAssignment_0_0; }

		//"external"
		public Keyword getIsExternalExternalKeyword_0_0_0() { return cIsExternalExternalKeyword_0_0_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_0_1() { return cWSTerminalRuleCall_0_1; }

		//componentName=ID
		public Assignment getComponentNameAssignment_1() { return cComponentNameAssignment_1; }

		//ID
		public RuleCall getComponentNameIDTerminalRuleCall_1_0() { return cComponentNameIDTerminalRuleCall_1_0; }

		//"."
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }

		//componentProperty=ID
		public Assignment getComponentPropertyAssignment_3() { return cComponentPropertyAssignment_3; }

		//ID
		public RuleCall getComponentPropertyIDTerminalRuleCall_3_0() { return cComponentPropertyIDTerminalRuleCall_3_0; }

		//(WS isOptional?="(optional)")?
		public Group getGroup_4() { return cGroup_4; }

		//WS
		public RuleCall getWSTerminalRuleCall_4_0() { return cWSTerminalRuleCall_4_0; }

		//isOptional?="(optional)"
		public Assignment getIsOptionalAssignment_4_1() { return cIsOptionalAssignment_4_1; }

		//"(optional)"
		public Keyword getIsOptionalOptionalKeyword_4_1_0() { return cIsOptionalOptionalKeyword_4_1_0; }
	}

	public class FacetsPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FacetsProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFacetsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cFacetsNamesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFacetsNamesIDTerminalRuleCall_2_0 = (RuleCall)cFacetsNamesAssignment_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Assignment cFacetsNamesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cFacetsNamesIDTerminalRuleCall_4_2_0 = (RuleCall)cFacetsNamesAssignment_4_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//FacetsProperty:
		//	"facets:" WS? facetsNames+=ID WS? ("," WS? facetsNames+=ID)* WS? ";";
		@Override public ParserRule getRule() { return rule; }

		//"facets:" WS? facetsNames+=ID WS? ("," WS? facetsNames+=ID)* WS? ";"
		public Group getGroup() { return cGroup; }

		//"facets:"
		public Keyword getFacetsKeyword_0() { return cFacetsKeyword_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//facetsNames+=ID
		public Assignment getFacetsNamesAssignment_2() { return cFacetsNamesAssignment_2; }

		//ID
		public RuleCall getFacetsNamesIDTerminalRuleCall_2_0() { return cFacetsNamesIDTerminalRuleCall_2_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//("," WS? facetsNames+=ID)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4_1() { return cWSTerminalRuleCall_4_1; }

		//facetsNames+=ID
		public Assignment getFacetsNamesAssignment_4_2() { return cFacetsNamesAssignment_4_2; }

		//ID
		public RuleCall getFacetsNamesIDTerminalRuleCall_4_2_0() { return cFacetsNamesIDTerminalRuleCall_4_2_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_5() { return cWSTerminalRuleCall_5; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}

	public class ExtendsPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExtendsProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExtendsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Assignment cExtendsNamesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExtendsNamesIDTerminalRuleCall_2_0 = (RuleCall)cExtendsNamesAssignment_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Assignment cExtendsNamesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cExtendsNamesIDTerminalRuleCall_4_2_0 = (RuleCall)cExtendsNamesAssignment_4_2.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ExtendsProperty:
		//	"extends:" WS? extendsNames+=ID WS? ("," WS? extendsNames+=ID)* WS? ";";
		@Override public ParserRule getRule() { return rule; }

		//"extends:" WS? extendsNames+=ID WS? ("," WS? extendsNames+=ID)* WS? ";"
		public Group getGroup() { return cGroup; }

		//"extends:"
		public Keyword getExtendsKeyword_0() { return cExtendsKeyword_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//extendsNames+=ID
		public Assignment getExtendsNamesAssignment_2() { return cExtendsNamesAssignment_2; }

		//ID
		public RuleCall getExtendsNamesIDTerminalRuleCall_2_0() { return cExtendsNamesIDTerminalRuleCall_2_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_3() { return cWSTerminalRuleCall_3; }

		//("," WS? extendsNames+=ID)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_4_1() { return cWSTerminalRuleCall_4_1; }

		//extendsNames+=ID
		public Assignment getExtendsNamesAssignment_4_2() { return cExtendsNamesAssignment_4_2; }

		//ID
		public RuleCall getExtendsNamesIDTerminalRuleCall_4_2_0() { return cExtendsNamesIDTerminalRuleCall_4_2_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_5() { return cWSTerminalRuleCall_5; }

		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	
	
	private final GraphElements pGraph;
	private final ComponentOrFacetElements pComponentOrFacet;
	private final ComponentElements pComponent;
	private final FacetElements pFacet;
	private final ComponentPropertiesElements pComponentProperties;
	private final FacetPropertiesElements pFacetProperties;
	private final FacetPropertyElements pFacetProperty;
	private final OptionalPropertyElements pOptionalProperty;
	private final InstallerPropertyElements pInstallerProperty;
	private final ChildrenPropertyElements pChildrenProperty;
	private final ExportsPropertyElements pExportsProperty;
	private final ExportsVariableElements pExportsVariable;
	private final ImportsPropertyElements pImportsProperty;
	private final ImportsVariableElements pImportsVariable;
	private final FacetsPropertyElements pFacetsProperty;
	private final ExtendsPropertyElements pExtendsProperty;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public GraphDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pGraph = new GraphElements();
		this.pComponentOrFacet = new ComponentOrFacetElements();
		this.pComponent = new ComponentElements();
		this.pFacet = new FacetElements();
		this.pComponentProperties = new ComponentPropertiesElements();
		this.pFacetProperties = new FacetPropertiesElements();
		this.pFacetProperty = new FacetPropertyElements();
		this.pOptionalProperty = new OptionalPropertyElements();
		this.pInstallerProperty = new InstallerPropertyElements();
		this.pChildrenProperty = new ChildrenPropertyElements();
		this.pExportsProperty = new ExportsPropertyElements();
		this.pExportsVariable = new ExportsVariableElements();
		this.pImportsProperty = new ImportsPropertyElements();
		this.pImportsVariable = new ImportsVariableElements();
		this.pFacetsProperty = new FacetsPropertyElements();
		this.pExtendsProperty = new ExtendsPropertyElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("fr.imag.mosig.seacs.roboconf.GraphDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Graph:
	//	(WS? components+=ComponentOrFacet WS?)*;
	public GraphElements getGraphAccess() {
		return pGraph;
	}
	
	public ParserRule getGraphRule() {
		return getGraphAccess().getRule();
	}

	//ComponentOrFacet:
	//	component=Component | facet=Facet;
	public ComponentOrFacetElements getComponentOrFacetAccess() {
		return pComponentOrFacet;
	}
	
	public ParserRule getComponentOrFacetRule() {
		return getComponentOrFacetAccess().getRule();
	}

	//Component:
	//	name=ID WS? "{" WS? properties=ComponentProperties WS? "}";
	public ComponentElements getComponentAccess() {
		return pComponent;
	}
	
	public ParserRule getComponentRule() {
		return getComponentAccess().getRule();
	}

	//Facet:
	//	"facet" WS? name=ID WS? "{" WS? properties=FacetProperties WS? "}";
	public FacetElements getFacetAccess() {
		return pFacet;
	}
	
	public ParserRule getFacetRule() {
		return getFacetAccess().getRule();
	}

	//ComponentProperties:
	//	optionalProperties+=OptionalProperty* WS? installerProperty=InstallerProperty WS?
	//	optionalProperties+=OptionalProperty*;
	public ComponentPropertiesElements getComponentPropertiesAccess() {
		return pComponentProperties;
	}
	
	public ParserRule getComponentPropertiesRule() {
		return getComponentPropertiesAccess().getRule();
	}

	//FacetProperties:
	//	(WS? properties+=FacetProperty WS?)*;
	public FacetPropertiesElements getFacetPropertiesAccess() {
		return pFacetProperties;
	}
	
	public ParserRule getFacetPropertiesRule() {
		return getFacetPropertiesAccess().getRule();
	}

	//FacetProperty:
	//	childrenProperty=ChildrenProperty | exportsProperty=ExportsProperty;
	public FacetPropertyElements getFacetPropertyAccess() {
		return pFacetProperty;
	}
	
	public ParserRule getFacetPropertyRule() {
		return getFacetPropertyAccess().getRule();
	}

	//OptionalProperty:
	//	childrenProperty=ChildrenProperty | exportsProperty=ExportsProperty | importsProperty=ImportsProperty |
	//	facetsProperty=FacetsProperty | extendsProperty=ExtendsProperty;
	public OptionalPropertyElements getOptionalPropertyAccess() {
		return pOptionalProperty;
	}
	
	public ParserRule getOptionalPropertyRule() {
		return getOptionalPropertyAccess().getRule();
	}

	//InstallerProperty:
	//	"installer:" WS? name=ID WS? ";";
	public InstallerPropertyElements getInstallerPropertyAccess() {
		return pInstallerProperty;
	}
	
	public ParserRule getInstallerPropertyRule() {
		return getInstallerPropertyAccess().getRule();
	}

	//ChildrenProperty:
	//	"children:" WS? name+=ID WS? ("," WS? name+=ID)* WS? ";";
	public ChildrenPropertyElements getChildrenPropertyAccess() {
		return pChildrenProperty;
	}
	
	public ParserRule getChildrenPropertyRule() {
		return getChildrenPropertyAccess().getRule();
	}

	//ExportsProperty:
	//	"exports:" WS? exportsVariables+=ExportsVariable WS? ("," WS? exportsVariables+=ExportsVariable)* WS? ";";
	public ExportsPropertyElements getExportsPropertyAccess() {
		return pExportsProperty;
	}
	
	public ParserRule getExportsPropertyRule() {
		return getExportsPropertyAccess().getRule();
	}

	//ExportsVariable:
	//	name="ip" | name=ID WS? "=" WS? value=INT;
	public ExportsVariableElements getExportsVariableAccess() {
		return pExportsVariable;
	}
	
	public ParserRule getExportsVariableRule() {
		return getExportsVariableAccess().getRule();
	}

	//ImportsProperty:
	//	"imports:" WS? importsVariables+=ImportsVariable WS? ("," WS? importsVariables+=ImportsVariable)* WS? ";";
	public ImportsPropertyElements getImportsPropertyAccess() {
		return pImportsProperty;
	}
	
	public ParserRule getImportsPropertyRule() {
		return getImportsPropertyAccess().getRule();
	}

	//ImportsVariable:
	//	(isExternal?="external" WS)? componentName=ID "." componentProperty=ID (WS isOptional?="(optional)")?;
	public ImportsVariableElements getImportsVariableAccess() {
		return pImportsVariable;
	}
	
	public ParserRule getImportsVariableRule() {
		return getImportsVariableAccess().getRule();
	}

	//FacetsProperty:
	//	"facets:" WS? facetsNames+=ID WS? ("," WS? facetsNames+=ID)* WS? ";";
	public FacetsPropertyElements getFacetsPropertyAccess() {
		return pFacetsProperty;
	}
	
	public ParserRule getFacetsPropertyRule() {
		return getFacetsPropertyAccess().getRule();
	}

	//ExtendsProperty:
	//	"extends:" WS? extendsNames+=ID WS? ("," WS? extendsNames+=ID)* WS? ";";
	public ExtendsPropertyElements getExtendsPropertyAccess() {
		return pExtendsProperty;
	}
	
	public ParserRule getExtendsPropertyRule() {
		return getExtendsPropertyAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
